{"ast":null,"code":"var _jsxFileName = \"/Users/soo/Desktop/wanted-pre-onboarding-frontend/wanted-pre-onboarding-frontend-1/wanted-pre-onboarding/src/components/LoginComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = props => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [isEmail, setIsEmail] = useState(false);\n  const onChangeEmail = useCallback(e => {\n    const emailRegex = /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\n    const emailCurrent = e.target.value;\n    setEmail(emailCurrent);\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage('이메일 형식이 틀렸어요! 다시 확인해주세요 ㅜ ㅜ');\n      setIsEmail(false);\n    } else {\n      setEmailMessage('올바른 이메일 형식이에요 : )');\n      setIsEmail(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC774\\uBA54\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrap, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => navigate(\"/todo\"),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => props.setLoginOrSignUp(false),\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginComponent, \"Zt1PskVJxc25rXBBS/BCehqtGWY=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginComponent;\nconst ButtonWrap = styled.div`\ndisplay:flex;\njustify-content:space-between;\n`;\n_c2 = ButtonWrap;\nexport default LoginComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginComponent\");\n$RefreshReg$(_c2, \"ButtonWrap\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","styled","LoginComponent","props","navigate","email","setEmail","isEmail","setIsEmail","onChangeEmail","e","emailRegex","emailCurrent","target","value","test","setEmailMessage","setLoginOrSignUp","ButtonWrap","div"],"sources":["/Users/soo/Desktop/wanted-pre-onboarding-frontend/wanted-pre-onboarding-frontend-1/wanted-pre-onboarding/src/components/LoginComponent.js"],"sourcesContent":["import React, { useState,useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components';\n\nconst LoginComponent = (props) => {\n\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('')\n    const [isEmail, setIsEmail] = useState(false)\n\n    const onChangeEmail = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n        const emailRegex =\n          /([\\w-.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([\\w-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/\n        const emailCurrent = e.target.value\n        setEmail(emailCurrent)\n    \n        if (!emailRegex.test(emailCurrent)) {\n          setEmailMessage('이메일 형식이 틀렸어요! 다시 확인해주세요 ㅜ ㅜ')\n          setIsEmail(false)\n        } else {\n          setEmailMessage('올바른 이메일 형식이에요 : )')\n          setIsEmail(true)\n        }\n      }, [])\n    return (\n        <div>\n            <div>LOGIN</div>\n            <div>이메일</div>\n            <input/>\n            <div>비밀번호</div>\n            <input/>\n            <ButtonWrap>            \n              <div onClick={()=>navigate(\"/todo\")}>로그인</div>\n              <div onClick={()=>props.setLoginOrSignUp(false)}>회원가입</div>\n            </ButtonWrap>\n\n        </div>\n    );\n};\n\nconst ButtonWrap = styled.div`\ndisplay:flex;\njustify-content:space-between;\n`\n\nexport default LoginComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,WAAW,QAAQ,OAAO;AACnD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,MAAM,MAAM,mBAAmB;AAAC;AAEvC,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAAA;EAE9B,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM,CAACK,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,aAAa,GAAGV,WAAW,CAAEW,CAAsC,IAAK;IAC1E,MAAMC,UAAU,GACd,oGAAoG;IACtG,MAAMC,YAAY,GAAGF,CAAC,CAACG,MAAM,CAACC,KAAK;IACnCR,QAAQ,CAACM,YAAY,CAAC;IAEtB,IAAI,CAACD,UAAU,CAACI,IAAI,CAACH,YAAY,CAAC,EAAE;MAClCI,eAAe,CAAC,6BAA6B,CAAC;MAC9CR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,MAAM;MACLQ,eAAe,CAAC,mBAAmB,CAAC;MACpCR,UAAU,CAAC,IAAI,CAAC;IAClB;EACF,CAAC,EAAE,EAAE,CAAC;EACR,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAgB,eAChB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAc,eACd;MAAA;MAAA;MAAA;IAAA,QAAQ,eACR;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAe,eACf;MAAA;MAAA;MAAA;IAAA,QAAQ,eACR,QAAC,UAAU;MAAA,wBACT;QAAK,OAAO,EAAE,MAAIJ,QAAQ,CAAC,OAAO,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAU,eAC9C;QAAK,OAAO,EAAE,MAAID,KAAK,CAACc,gBAAgB,CAAC,KAAK,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAW;IAAA;MAAA;MAAA;MAAA;IAAA,QAChD;EAAA;IAAA;IAAA;IAAA;EAAA,QAEX;AAEd,CAAC;AAAC,GAlCIf,cAAc;EAAA,QAECF,WAAW;AAAA;AAAA,KAF1BE,cAAc;AAoCpB,MAAMgB,UAAU,GAAGjB,MAAM,CAACkB,GAAI;AAC9B;AACA;AACA,CAAC;AAAA,MAHKD,UAAU;AAKhB,eAAehB,cAAc;AAAC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}