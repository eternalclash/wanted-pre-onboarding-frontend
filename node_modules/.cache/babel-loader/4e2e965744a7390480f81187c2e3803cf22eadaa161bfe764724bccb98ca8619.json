{"ast":null,"code":"var _jsxFileName = \"/Users/soo/Desktop/wanted-pre-onboarding-frontend/wanted-pre-onboarding-frontend-1/wanted-pre-onboarding/src/components/LoginComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = props => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [emailMessage, setEmailMessage] = useState('');\n  const [isEmail, setIsEmail] = useState(false);\n  const [password, setPassword] = useState('');\n  const [passwordMessage, setPasswordMessage] = useState('');\n  const [isPassword, setIsPassword] = useState(false);\n  const onChangeEmail = useCallback(e => {\n    const emailRegex = /([\\w-.]+)@/;\n    const emailCurrent = e.target.value;\n    setEmail(emailCurrent);\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage('@가 포함되어야 합니다');\n      setIsEmail(false);\n    } else {\n      setEmailMessage('올바른 이메일 형식입니다');\n      setIsEmail(true);\n    }\n  }, []);\n  const onChangePassword = useCallback(e => {\n    const passwordCurrent = e.target.value;\n    setPassword(passwordCurrent);\n    if (password.length < 8) {\n      setPasswordMessage('비밀번호 8자리 이상 입력해주세요!');\n      setIsPassword(false);\n    } else {\n      setPasswordMessage('안전한 비밀번호에요 : )');\n      setIsPassword(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC774\\uBA54\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeEmail,\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `message ${isEmail ? 'success' : 'error'}`,\n      children: emailMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangePassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `message ${isPassword ? 'success' : 'error'}`,\n      children: passwordMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrap, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => navigate(\"/todo\"),\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => props.setLoginOrSignUp(false),\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginComponent, \"kfetXXqZf3LxU/cNeJWIIz76PAs=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginComponent;\nconst ButtonWrap = styled.div`\ndisplay:flex;\njustify-content:space-between;\n`;\n_c2 = ButtonWrap;\nexport default LoginComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginComponent\");\n$RefreshReg$(_c2, \"ButtonWrap\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","styled","LoginComponent","props","navigate","email","setEmail","emailMessage","setEmailMessage","isEmail","setIsEmail","password","setPassword","passwordMessage","setPasswordMessage","isPassword","setIsPassword","onChangeEmail","e","emailRegex","emailCurrent","target","value","test","onChangePassword","passwordCurrent","length","setLoginOrSignUp","ButtonWrap","div"],"sources":["/Users/soo/Desktop/wanted-pre-onboarding-frontend/wanted-pre-onboarding-frontend-1/wanted-pre-onboarding/src/components/LoginComponent.js"],"sourcesContent":["import React, { useState,useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components';\n\nconst LoginComponent = (props) => {\n\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('')\n    const [emailMessage, setEmailMessage] = useState('')\n    const [isEmail, setIsEmail] = useState(false)\n    const [password, setPassword] = useState('')\n    const [passwordMessage, setPasswordMessage] = useState('')\n    const [isPassword, setIsPassword] = useState(false)\n\n    const onChangeEmail = useCallback((e) => {\n        const emailRegex =\n          /([\\w-.]+)@/\n        const emailCurrent = e.target.value\n        setEmail(emailCurrent)\n    \n        if (!emailRegex.test(emailCurrent)) {\n          setEmailMessage('@가 포함되어야 합니다')\n          setIsEmail(false)\n        } else {\n          setEmailMessage('올바른 이메일 형식입니다')\n          setIsEmail(true)\n        }\n      }, [])\n    const onChangePassword = useCallback((e) => {\n        const passwordCurrent = e.target.value\n        setPassword(passwordCurrent)\n    \n        if (password.length<8) {\n          setPasswordMessage('비밀번호 8자리 이상 입력해주세요!')\n          setIsPassword(false)\n        } else {\n          setPasswordMessage('안전한 비밀번호에요 : )')\n          setIsPassword(true)\n        }\n      }, [])\n    return (\n        <div>\n            <div>LOGIN</div>\n            <div>이메일</div>\n            <input onChange={onChangeEmail} placeholder='이메일을 입력해주세요'/>\n            {email.length > 0 &&<span className={`message ${isEmail ? 'success' : 'error'}`}>{emailMessage}</span>}\n            <div>비밀번호</div>\n            <input onChange={onChangePassword}/>\n            {password.length > 0 && (<span className={`message ${isPassword ? 'success' : 'error'}`}>{passwordMessage}</span>)}\n            <ButtonWrap>            \n              <div onClick={()=>navigate(\"/todo\")}>로그인</div>\n              <div onClick={()=>props.setLoginOrSignUp(false)}>회원가입</div>\n            </ButtonWrap>\n\n        </div>\n    );\n};\n\nconst ButtonWrap = styled.div`\ndisplay:flex;\njustify-content:space-between;\n`\n\nexport default LoginComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}