{"ast":null,"code":"var _jsxFileName = \"/Users/soo/Desktop/wanted-pre-onboarding-frontend/wanted-pre-onboarding-frontend-1/wanted-pre-onboarding/src/components/SignUpComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport signup from '../api/signup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUpComponent = props => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [emailMessage, setEmailMessage] = useState('');\n  const [isEmail, setIsEmail] = useState(false);\n  const [emailColor, setEmailColor] = useState();\n  const [password, setPassword] = useState('');\n  const [passwordMessage, setPasswordMessage] = useState('');\n  const [isPassword, setIsPassword] = useState(false);\n  const [passwordColor, setPasswordColor] = useState();\n  const onChangeEmail = useCallback(e => {\n    const emailRegex = /([\\w-.]+)@/;\n    const emailCurrent = e.target.value;\n    setEmail(emailCurrent);\n    if (!emailRegex.test(emailCurrent)) {\n      setEmailMessage('이메일에는 @가 포함되어야 합니다');\n      setIsEmail(false);\n      setEmailColor(\"red\");\n    } else {\n      setEmailMessage('올바른 이메일 형식입니다');\n      setIsEmail(true);\n      setEmailColor(\"green\");\n    }\n  }, []);\n  const onChangePassword = useCallback(e => {\n    const passwordRegex = /([\\w-.]+).{7,25}$/;\n    const passwordCurrent = e.target.value;\n    setPassword(passwordCurrent);\n    if (!passwordRegex.test(passwordCurrent)) {\n      setPasswordMessage('비밀번호 8자리 이상 입력해주세요');\n      setIsPassword(false);\n      setPasswordColor(\"red\");\n    } else {\n      setPasswordMessage('안전한 비밀번호입니다');\n      setIsPassword(true);\n      setPasswordColor(\"green\");\n    }\n  }, []);\n  const onClickSignUp = useCallback(() => {\n    signup(email, password);\n    navigate(\"/todo\");\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"SIGNUP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC774\\uBA54\\uC77C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeEmail,\n      placeholder: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), email.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: `${emailColor}`\n      },\n      children: emailMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      onChange: onChangePassword,\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), password.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: `${passwordColor}`\n      },\n      children: passwordMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(ButtonWrap, {\n      children: [isEmail && isPassword ? /*#__PURE__*/_jsxDEV(SuccessButton, {\n        onClick: onClickSignUp,\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 42\n      }, this) : /*#__PURE__*/_jsxDEV(FailButton, {\n        onClick: () => navigate(\"/todo\"),\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 103\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => props.setLoginOrSignUp(false),\n        children: \"\\uCDE8\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(SignUpComponent, \"1F6BhBjCy8fDIDVt0FePA/PNG8s=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUpComponent;\nconst ButtonWrap = styled.div`\ndisplay:flex;\njustify-content:space-between;\n`;\n_c2 = ButtonWrap;\nconst SuccessButton = styled.div`\nbackground-color:orange;\ncursor:pointer\n`;\n_c3 = SuccessButton;\nconst FailButton = styled.div`\n\n`;\n_c4 = FailButton;\nexport default SignUpComponent;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SignUpComponent\");\n$RefreshReg$(_c2, \"ButtonWrap\");\n$RefreshReg$(_c3, \"SuccessButton\");\n$RefreshReg$(_c4, \"FailButton\");","map":{"version":3,"names":["React","useState","useCallback","useNavigate","styled","signup","SignUpComponent","props","navigate","email","setEmail","emailMessage","setEmailMessage","isEmail","setIsEmail","emailColor","setEmailColor","password","setPassword","passwordMessage","setPasswordMessage","isPassword","setIsPassword","passwordColor","setPasswordColor","onChangeEmail","e","emailRegex","emailCurrent","target","value","test","onChangePassword","passwordRegex","passwordCurrent","onClickSignUp","length","color","setLoginOrSignUp","ButtonWrap","div","SuccessButton","FailButton"],"sources":["/Users/soo/Desktop/wanted-pre-onboarding-frontend/wanted-pre-onboarding-frontend-1/wanted-pre-onboarding/src/components/SignUpComponent.js"],"sourcesContent":["import React, { useState,useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom'\nimport styled from 'styled-components';\nimport signup from '../api/signup';\nconst SignUpComponent = (props) => {\n\n    const navigate = useNavigate();\n    const [email, setEmail] = useState('')\n    const [emailMessage, setEmailMessage] = useState('')\n    const [isEmail, setIsEmail] = useState(false)\n    const [emailColor,setEmailColor] = useState()\n    const [password, setPassword] = useState('')\n    const [passwordMessage, setPasswordMessage] = useState('')\n    const [isPassword, setIsPassword] = useState(false)\n    const [passwordColor,setPasswordColor] = useState()\n\n\n\n    const onChangeEmail = useCallback((e) => {\n        const emailRegex =\n          /([\\w-.]+)@/\n        const emailCurrent = e.target.value\n        setEmail(emailCurrent)\n    \n        if (!emailRegex.test(emailCurrent)) {\n          setEmailMessage('이메일에는 @가 포함되어야 합니다')\n          setIsEmail(false)\n          setEmailColor(\"red\")\n        } else {\n          setEmailMessage('올바른 이메일 형식입니다')\n          setIsEmail(true)\n          setEmailColor(\"green\")\n        }\n      }, [])\n    const onChangePassword = useCallback((e) => {\n        const passwordRegex = /([\\w-.]+).{7,25}$/\n        const passwordCurrent = e.target.value\n        setPassword(passwordCurrent)\n        if (!passwordRegex.test(passwordCurrent)) {\n          setPasswordMessage('비밀번호 8자리 이상 입력해주세요')\n          setIsPassword(false)\n          setPasswordColor(\"red\")\n\n        } else {\n          setPasswordMessage('안전한 비밀번호입니다')\n          setIsPassword(true)\n          setPasswordColor(\"green\")\n        }\n      }, [])\n\n    const onClickSignUp = useCallback(()=>{\n        signup(email,password)\n        navigate(\"/todo\")\n    })\n    return (\n        <div>\n            <div>SIGNUP</div>\n            <div>이메일</div>\n            <input onChange={onChangeEmail} placeholder='이메일을 입력해주세요'/>\n            {email.length > 0 &&<span style={{color:`${emailColor}`}} >{emailMessage}</span>}\n            <div>비밀번호</div>\n            <input  type='password' onChange={onChangePassword} placeholder='비밀번호를 입력해주세요'/>\n            {password.length > 0 && (<span style={{color:`${passwordColor}`}}>{passwordMessage}</span>)}\n            <ButtonWrap>\n                {\n                    isEmail&&isPassword? <SuccessButton onClick={onClickSignUp}>회원가입</SuccessButton>: <FailButton onClick={()=>navigate(\"/todo\")}>회원가입</FailButton>\n                }            \n             \n              <div onClick={()=>props.setLoginOrSignUp(false)}>취소</div>\n            </ButtonWrap>\n\n        </div>\n    );\n};\n\nconst ButtonWrap = styled.div`\ndisplay:flex;\njustify-content:space-between;\n`\nconst SuccessButton = styled.div`\nbackground-color:orange;\ncursor:pointer\n`\nconst FailButton = styled.div`\n\n`\n\n\nexport default SignUpComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}